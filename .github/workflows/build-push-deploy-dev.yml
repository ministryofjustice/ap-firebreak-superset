name: CI/CD dev

on:
  pull_request:
    branches-ignore:
      - dependabot/**
  workflow_dispatch:

permissions: {}
concurrency: dev

jobs:
  build-push-dev:
    name: Build & Push New Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: write # This is required for actions/checkout
    environment: dev
    outputs:
      new_tag: ${{ steps.set-version-tag-output.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.62.0
        id: bump-id
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          PRERELEASE: true
          PRERELEASE_SUFFIX: dev

      - name: Set Version tag output
        id: set-version-tag-output
        run: echo "new_tag=${{ steps.bump-id.outputs.new_tag }}" >> $GITHUB_OUTPUT

  deploy-dev:
    if: github.event_name == 'pull_request'
    name: Deploy Helm Chart into Cloud Platform
    runs-on: ubuntu-latest
    permissions:
      contents: write # This is required for actions/checkout
      id-token: write # This is required for requesting the JWT
    environment: dev
    steps:
      - name: Authenticate to the cluster
        env:
          KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${KUBE_CLUSTER}

      - name: Helm Chart Releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: helm_deploy/ap-firebreak/superset/charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        
      - name: update helm repo
        continue-on-error: true
        run: |
          helm repo update ap-firebreak-superset

      - name: Upgrade the Helm chart
        env:
          ECR_REPO_WEBAPP: ${{ steps.login-ecr.outputs.registry }}/${{ vars.DEV_ECR_REPOSITORY }}
          KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
          NEW_TAG_V: ${{ needs.build-push-dev.outputs.new_tag }}
          RELEASE_NAME: ${{ github.event.repository.name }}-dev

        run: |
          helm upgrade --install --wait --timeout 10m0s --namespace $KUBE_NAMESPACE $RELEASE_NAME ap-firebreak-superset \
          --set Namespace=$KUBE_NAMESPACE